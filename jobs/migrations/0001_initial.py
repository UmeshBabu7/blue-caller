# Generated by Django 5.1.1 on 2025-10-24 10:55

import django.db.models.deletion
import phonenumber_field.modelfields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ServiceCategory',
            fields=[
                ('id', models.CharField(max_length=2, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('icon', models.CharField(blank=True, max_length=50)),
                ('image', models.ImageField(blank=True, null=True, upload_to='category_images/')),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region='NP', unique=True)),
                ('profile_pic', models.ImageField(blank=True, upload_to='profiles/')),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('owner', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appointment_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('rejected', 'Rejected'), ('completed', 'Completed')], default='pending', max_length=10)),
                ('shift_type', models.CharField(choices=[('day', 'Day Shift'), ('night', 'Night Shift')], default='day', max_length=10)),
                ('location', models.TextField(blank=True, null=True)),
                ('special_instructions', models.TextField(blank=True, null=True)),
                ('reason', models.TextField(blank=True, null=True)),
                ('customer_completed', models.BooleanField(default=False)),
                ('worker_completed', models.BooleanField(default=False)),
                ('customer_latitude', models.FloatField(blank=True, null=True)),
                ('customer_longitude', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customer_appointments', to='jobs.customer')),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('base_pricing_type', models.CharField(choices=[('hourly', 'Hourly Rate'), ('sqft', 'Per Square Foot'), ('unit', 'Per Unit/Item'), ('inspection', 'Per Inspection'), ('shift', 'Shift-based'), ('fixed', 'Fixed Price')], max_length=20)),
                ('image', models.ImageField(blank=True, null=True, upload_to='service_images/')),
                ('is_active', models.BooleanField(default=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to='jobs.servicecategory')),
            ],
        ),
        migrations.CreateModel(
            name='SubTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('default_pricing_type', models.CharField(choices=[('hourly', 'Hourly Rate'), ('sqft', 'Per Square Foot'), ('unit', 'Per Unit/Item'), ('inspection', 'Per Inspection'), ('shift', 'Shift-based'), ('fixed', 'Fixed Price')], max_length=20)),
                ('duration', models.CharField(blank=True, max_length=100)),
                ('materials_included', models.BooleanField(default=False)),
                ('special_offer', models.BooleanField(default=False)),
                ('offer_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('original_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('requirements', models.TextField(blank=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='subtask_images/')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subtasks', to='jobs.service')),
            ],
        ),
        migrations.CreateModel(
            name='Worker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region='NP', unique=True)),
                ('tagline', models.CharField(max_length=100)),
                ('bio', models.TextField(blank=True)),
                ('profile_pic', models.ImageField(blank=True, upload_to='profiles/')),
                ('verified', models.BooleanField(default=False)),
                ('citizenship_image', models.ImageField(blank=True, null=True, upload_to='citizenship/')),
                ('certificate_file', models.FileField(blank=True, null=True, upload_to='certificates/')),
                ('appointed', models.BooleanField(default=False)),
                ('appointment_date', models.DateTimeField(blank=True, null=True)),
                ('average_rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('total_ratings', models.PositiveIntegerField(default=0)),
                ('rating_count', models.PositiveIntegerField(default=0)),
                ('shift', models.CharField(choices=[('day', 'Day'), ('night', 'Night'), ('all', 'All')], default='all', max_length=10)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('owner', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('appointment_request', 'Appointment Request'), ('appointment_accepted', 'Appointment Accepted'), ('appointment_rejected', 'Appointment Rejected'), ('appointment_completed', 'Appointment Completed'), ('appointment_cancelled', 'Appointment Cancelled'), ('rating_received', 'Rating Received')], max_length=30)),
                ('title', models.CharField(max_length=100)),
                ('message', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('appointment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='jobs.appointment')),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='jobs.customer')),
                ('worker', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='jobs.worker')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='appointment',
            name='worker',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='worker_appointments', to='jobs.worker'),
        ),
        migrations.CreateModel(
            name='WorkerService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_available', models.BooleanField(default=True)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jobs.service')),
                ('worker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to='jobs.worker')),
            ],
            options={
                'unique_together': {('worker', 'service')},
            },
        ),
        migrations.CreateModel(
            name='WorkerSubTaskPricing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pricing_type', models.CharField(choices=[('hourly', 'Hourly Rate'), ('sqft', 'Per Square Foot'), ('unit', 'Per Unit/Item'), ('inspection', 'Per Inspection'), ('shift', 'Shift-based'), ('fixed', 'Fixed Price')], max_length=20)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('experience_level', models.CharField(blank=True, choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('expert', 'Expert')], max_length=20)),
                ('night_shift_extra', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('min_hours', models.PositiveIntegerField(default=1, help_text='Minimum hours for hourly pricing')),
                ('subtask', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jobs.subtask')),
                ('worker_service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pricing', to='jobs.workerservice')),
            ],
            options={
                'unique_together': {('worker_service', 'subtask')},
            },
        ),
        migrations.AddField(
            model_name='appointment',
            name='service_subtask',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='jobs.workersubtaskpricing'),
        ),
        migrations.CreateModel(
            name='WorkerRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveSmallIntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('appointment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='jobs.appointment')),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='given_ratings', to='jobs.customer')),
                ('worker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='jobs.worker')),
            ],
            options={
                'unique_together': {('worker', 'appointment', 'customer')},
            },
        ),
    ]
